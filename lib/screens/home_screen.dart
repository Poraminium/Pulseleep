// lib/screens/home_screen.dart
import 'package:flutter/material.dart';
import '../models/user_response.dart';
import '../services/psqi_calculator.dart';
import 'dashboard_screen.dart';
import 'package:provider/provider.dart';
import 'package:pulseleep/services/pulse_usb_service.dart';

class HomeScreen extends StatelessWidget {
  final UserResponse user;

  const HomeScreen({super.key, required this.user});

  @override
  Widget build(BuildContext context) {
    final psqi = PsqiCalculator.calculate(user);

    final List<String> riskFactors = [];

    // ‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏ö‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏∂‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏ß‡πâ
    if (user.family <= 5)
      riskFactors.add('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏ú‡∏•‡∏•‡∏ö‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô');
    if (user.exercise < 2) riskFactors.add('‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏¢ ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ô‡∏≠‡∏ô‡πÅ‡∏¢‡πà');
    if (user.caffeine >= 0.4) riskFactors.add('‡∏î‡∏∑‡πà‡∏°‡∏Ñ‡∏≤‡πÄ‡∏ü‡∏≠‡∏µ‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞ ‡∏≠‡∏≤‡∏à‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô');
    if (user.activityCount >= 8)
      riskFactors.add('‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏¢‡∏≠‡∏∞ ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ô‡∏≠‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠');
    if (user.friend < 6)
      riskFactors.add('‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ï‡πà‡∏≥ ‡∏≠‡∏≤‡∏à‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î');
    if (user.gpax < 2.75) riskFactors.add('GPAX ‡∏ï‡πà‡∏≥ ‡∏≠‡∏≤‡∏à‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô');

    return Scaffold(
      appBar: AppBar(title: Text('‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå')),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: ListView(
          children: [
            Text(
              '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô PSQI ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠:',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            Text(
              psqi.toStringAsFixed(2),
              style: TextStyle(fontSize: 48, color: Colors.deepPurple),
            ),
            SizedBox(height: 24),

            Text(
              '‡∏ä‡∏µ‡∏û‡∏à‡∏£‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (Mock Data):',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            Text('72, 74, 73, 71, 70, 69, 68, 70'), // ‡πÅ‡∏Å‡πâ‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å USB

            SizedBox(height: 24),
            Text(
              '‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á:',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            ...riskFactors.isEmpty
                ? [Text('‡πÑ‡∏°‡πà‡∏°‡∏µ üéâ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ß‡∏±‡∏á')]
                : riskFactors.map((risk) => Padding(
                      padding: const EdgeInsets.only(top: 8),
                      child: Text('- $risk'),
                    )),
            SizedBox(height: 32),
            ElevatedButton(
              onPressed: () {
                final pulseService =
                    Provider.of<PulseUsbService>(context, listen: false);
                pulseService.saveFullDayToHive();
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(content: Text('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏µ‡∏û‡∏à‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß')),
                );
              },
              child: Text('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏µ‡∏û‡∏à‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ'),
            ),
            SizedBox(height: 50),
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (_) => const DashboardScreen()),
                );
              },
              child: Text('‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (Dashboard)'),
            ),
          ],
        ),
      ),
    );
  }
}
